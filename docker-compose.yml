version: '3.8'

services:
  # Service untuk aplikasi Laravel (PHP-FPM)
  app:
    build:
      context: ./docker/php
      dockerfile: Dockerfile
    container_name: laravel-axon
    restart: always
    volumes:
      - ./src:/var/www/html # Mount project Laravel Anda ke dalam container
    networks:
      - app-network
    depends_on:
      - db

  # Service untuk Nginx (Web Server)
  nginx:
    image: nginx:stable-alpine # Menggunakan Nginx versi stabil dan Alpine untuk ukuran kecil
    container_name: laravel-nginx
    restart: always
    ports:
      - "8000:80" # Map port 8000 di host ke port 80 di container
    volumes:
      - ./src:/var/www/html # Mount project Laravel Anda
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf # Konfigurasi Nginx
    networks:
      - app-network
    depends_on:
      - app

  # Service untuk MySQL Database
  db:
    image: mysql:8.0 # Menggunakan MySQL versi 8.0
    container_name: laravel-db
    restart: always
    env_file: # Menggunakan file .env untuk variabel lingkungan database
      - .env.db
    volumes:
      - dbdata:/var/lib/mysql # Persistent volume untuk data database
    networks:
      - app-network
    ports:
      - "3306:3306" # Opsional: Jika Anda ingin mengakses MySQL dari host

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: laravel-phpmyadmin
    restart: always
    ports:
      - "8080:80" # Map port 8080 di host ke port 80 di container phpMyAdmin
    environment:
      PMA_HOST: db # Nama service database Anda di docker-compose.yml
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD} # Ambil dari .env.db
      PMA_PORT: 3306 # Port MySQL di dalam container db
      # PMA_USER: ${MYSQL_USER} # Opsional, jika Anda ingin langsung login sebagai user tertentu
      # PMA_PASSWORD: ${MYSQL_PASSWORD} # Opsional, jika Anda ingin langsung login sebagai user tertentu
    networks:
      - app-network
    depends_on:
      - db # Pastikan phpMyAdmin jalan setelah database
networks:
  app-network:
    driver: bridge

volumes:
  dbdata:
    driver: local